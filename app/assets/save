<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BloxdForge Auctions</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #181818;
            color: #ffffff;
        }

        header {
            background-color: #242424;
            padding: 1.5rem;
            position: sticky;
            top: 0;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            z-index: 100;
        }

        .search-container {
            max-width: 800px;
            margin: 0 auto;
            position: relative;
            display: flex;
            gap: 1rem;
        }

        .search-bar {
            flex-grow: 1;
            padding: 0.8rem 1.2rem;
            border: none;
            border-radius: 25px;
            background-color: #2a2a2a;
            color: #ffffff;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .search-bar:focus {
            outline: none;
            box-shadow: 0 0 10px rgba(255, 165, 0, 0.3);
        }

        .search-filter-btn {
            background-color: #FFA500;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .search-filter-btn:hover {
            background-color: #FF7F00;
        }

        .search-filter-menu {
            position: absolute;
            top: 100%;
            right: 0;
            margin-top: 0.5rem;
            background-color: #2a2a2a;
            border-radius: 10px;
            padding: 0.5rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
            display: none;
        }

        .search-filter-menu.active {
            display: block;
        }

        .filter-option {
            padding: 0.5rem 1rem;
            color: #ffffff;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .filter-option:hover {
            background-color: #FFA500;
        }

        .main-content {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .create-auction-btn {
            background-color: #FFA500;
            color: #ffffff;
            border: none;
            padding: 1rem 2rem;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            margin-bottom: 2rem;
            transition: all 0.3s ease;
            text-shadow: 0 0 10px #FF7F00;
        }

        .create-auction-btn:hover {
            background-color: #FF7F00;
            box-shadow: 0 0 20px rgba(255, 165, 0, 0.3);
        }

        .auctions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }

        .auction-card {
            background-color: #2a2a2a;
            border-radius: 15px;
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .auction-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        }

        .auction-title {
            color: #FFA500;
            font-size: 1.5rem;
            margin-bottom: 1rem;
            text-shadow: 0 0 10px #FF7F00;
        }

        .auction-details {
            color: #b0b0b0;
            font-size: 0.9rem;
            line-height: 1.6;
        }

        .price {
            color: #ffffff;
            font-size: 1.2rem;
            margin-top: 1rem;
            font-weight: bold;
        }

        .loading {
            text-align: center;
            padding: 2rem;
            color: #b0b0b0;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 1000;
        }

        .modal-content {
            background-color: #222222;
            max-width: 600px;
            margin: 2rem auto;
            padding: 2rem;
            border-radius: 15px;
            position: relative;
            max-height: 90vh;
            overflow-y: auto;
        }

        .close-btn {
            position: absolute;
            right: 1.5rem;
            top: 1.5rem;
            color: #b0b0b0;
            cursor: pointer;
            font-size: 1.5rem;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: #b0b0b0;
        }

        .form-input, .form-select {
            width: 100%;
            padding: 0.8rem;
            background-color: #2a2a2a;
            border: none;
            border-radius: 8px;
            color: #ffffff;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            box-shadow: 0 0 10px rgba(255, 165, 0, 0.3);
        }

        ::-webkit-scrollbar {
            width: 10px;
        }

        ::-webkit-scrollbar-track {
            background: #343434;
        }

        ::-webkit-scrollbar-thumb {
            background: #4C4D4D;
            border-radius: 5px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #FFA500;
        }
    </style>
</head>
<body>
    <header>
        <div class="search-container">
            <input type="text" class="search-bar" placeholder="Search auctions...">
            <button class="search-filter-btn" onclick="toggleSearchFilter()">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
                </svg>
            </button>
            <div class="search-filter-menu" id="searchFilterMenu">
                <div class="filter-option" data-filter="name">Name</div>
                <div class="filter-option" data-filter="lobbyType">Lobby Type</div>
                <div class="filter-option" data-filter="lobbyNumber">Lobby Number/Name</div>
                <div class="filter-option" data-filter="description">Description</div>
            </div>
        </div>
    </header>

    <main class="main-content">
        <button class="create-auction-btn" onclick="openCreateModal()">Create New Auction</button>
        
        <div class="auctions-grid" id="auctionsGrid">
            <div class="loading">Loading auctions...</div>
        </div>
    </main>

    <div class="modal" id="createModal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeCreateModal()">&times;</span>
            <h2 class="auction-title">Create New Auction</h2>
            <form id="createAuctionForm" onsubmit="createAuction(event)">
                <div class="form-group">
                    <label class="form-label">Item Name</label>
                    <input type="text" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Lobby Type</label>
                    <select class="form-select" required onchange="handleLobbyTypeChange(this.value)">
                        <option value="Survival">Survival</option>
                        <option value="Peaceful">Peaceful</option>
                        <option value="Creative">Creative</option>
                        <option value="Factions">Factions</option>
                        <option value="One Block">One Block</option>
                        <option value="Greenville">Greenville</option>
                        <option value="One Block Wide">One Block Wide</option>
                        <option value="Worlds">Worlds</option>
                    </select>
                </div>
                <div class="form-group" id="lobbyInputGroup">
                    <label class="form-label" id="lobbyInputLabel">Lobby Number</label>
                    <input type="number" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Starting Price</label>
                    <input type="number" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Buyout Price</label>
                    <input type="number" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Description</label>
                    <textarea class="form-input" rows="4" required></textarea>
                </div>
                <button type="submit" class="create-auction-btn">Create Auction</button>
            </form>
        </div>
    </div>

    <div class="modal" id="viewModal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeViewModal()">&times;</span>
            <div id="auctionDetails"></div>
        </div>
    </div>

    <script>
        let currentSearchFilter = 'name';
        let auctions = [];

        document.addEventListener('DOMContentLoaded', () => {
            loadAuctions();
            setupSearch();
        });

        async function loadAuctions() {
            try {
                const response = await fetch('https://raw.githack.com/Cyaben/bloxdforge-shop/main/auctions.json');
                auctions = await response.json();
                renderAuctions(auctions);
            } catch (error) {
                console.error('Error loading auctions:', error);
                document.querySelector('.loading').textContent = 'Error loading auctions. Please try again later.';
            }
        }

        function toggleSearchFilter() {
            const menu = document.getElementById('searchFilterMenu');
            menu.classList.toggle('active');
        }

        document.addEventListener('click', (e) => {
            const menu = document.getElementById('searchFilterMenu');
            const filterBtn = document.querySelector('.search-filter-btn');
            
            if (!menu.contains(e.target) && !filterBtn.contains(e.target)) {
                menu.classList.remove('active');
            }
        });

        document.querySelectorAll('.filter-option').forEach(option => {
            option.addEventListener('click', () => {
                currentSearchFilter = option.dataset.filter;
                document.querySelector('.search-bar').placeholder = `Search in ${option.textContent.toLowerCase()}...`;
                toggleSearchFilter();
                document.querySelector('.search-bar').focus();
            });
        });

        function handleLobbyTypeChange(value) {
            const label = document.getElementById('lobbyInputLabel');
            const input = document.querySelector('#lobbyInputGroup input');
            
            if (value === 'Worlds') {
                label.textContent = 'Lobby Name';
                input.type = 'text';
                input.placeholder = 'Enter world name';
            } else {
                label.textContent = 'Lobby Number';
                input.type = 'number';
                input.placeholder = '';
            }
        }

        function renderAuctions(filteredAuctions = auctions) {
            const grid = document.getElementById('auctionsGrid');
            grid.innerHTML = '';

            if (filteredAuctions.length === 0) {
                grid.innerHTML = '<div class="loading">No auctions found</div>';
                return;
            }

            filteredAuctions.forEach(auction => {
                const card = document.createElement('div');
                card.className = 'auction-card';
                card.innerHTML = `
                    <h3 class="auction-title">${auction.item}</h3>
                    <div class="auction-details">
                        <p>Lobby: ${auction.lobbyType} ${auction.lobbyType === 'Worlds' ? auction.lobbyName : '#' + auction.lobbyNumber}</p>
                        <p class="price">Starting at: $${auction.startingPrice}</p>
                    </div>
                `;
                card.onclick = () => viewAuction(auction);
                grid.appendChild(card);
            });
        }

        function setupSearch() {
            const searchBar = document.querySelector('.search-bar');
            searchBar.addEventListener('input', (e) => {
                const searchTerm = e.target.value.toLowerCase();
                const filtered = auctions.filter(auction => {
                    switch(currentSearchFilter) {
                        case 'name':
                            return auction.item.toLowerCase().includes(searchTerm);
                        case 'lobbyType':
                            return auction.lobbyType.toLowerCase().includes(searchTerm);
                        case 'lobbyNumber':
                            const searchField = auction.lobbyType === 'Worlds' ? 
                                auction.lobbyName : auction.lobbyNumber.toString();
                            return searchField.toLowerCase().includes(searchTerm);
                        case 'description':
                            return auction.description.toLowerCase().includes(searchTerm);
                        default:
                            return false;
                    }
                });
                renderAuctions(filtered);
            });
        }

        function openCreateModal() {
            document.getElementById('createModal').style.display = 'block';
        }

        function closeCreateModal() {
            document.getElementById('createModal').style.display = 'none';
        }

        function createAuction(event) {
            event.preventDefault();
            const form = event.target;
            const lobbyType = form[1].value;
            const newAuction = {
                id: auctions.length + 1,
                item: form[0].value,
                lobbyType: lobbyType,
                lobbyNumber: lobbyType === 'Worlds' ? form[2].value : parseInt(form[2].value),
                startingPrice: parseFloat(form[3].value),
                buyoutPrice: parseFloat(form[4].value),
                description: form[5].value
            };
            auctions.unshift(newAuction);
            renderAuctions();
            closeCreateModal();
            form.reset();
        }

        function viewAuction(auction) {
            const modal = document.getElementById('viewModal');
            const details = document.getElementById('auctionDetails');
            details.innerHTML = `
                <h2 class="auction-title">${auction.item}</h2>
                <div class="auction-details">
                    <p><strong>Lobby:</strong> ${auction.lobbyType} ${auction.lobbyType === 'Worlds' ? auction.lobbyName : '#' + auction.lobbyNumber}</p>
                    <p><strong>Starting Price:</strong> $${auction.startingPrice}</p>
                    <p><strong>Buyout Price:</strong> $${auction.buyoutPrice}</p>
                    <p><strong>Description:</strong></p>
                    <p>${auction.description}</p>
                </div>
            `;
            modal.style.display = 'block';
        }

        function closeViewModal() {
            document.getElementById('viewModal').style.display = 'none';
        }

        window.onclick = (event) => {
            const createModal = document.getElementById('createModal');
            const viewModal = document.getElementById('viewModal');
            if (event.target === createModal) createModal.style.display = 'none';
            if (event.target === viewModal) viewModal.style.display = 'none';
        }
    </script>
</body>
</html>
